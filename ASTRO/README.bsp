*********TODO: do I have my epochs wrong?

This informal document explains how to decode the satellite SPICE/SPK
.bsp files found at:

http://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/

which are essentially sets of Chebyshev coefficients.

Intended audience: you should know what the following terms mean:

  * DE430
  * SPICE
  * Chebyshev polynomials

Summary of steps:

  * Convert .bsp to .xsp
  * Convert DAF numbers to decimals
  * <h>Profit!</h>
  * Understand file format

Step 1: Using sat365 as an example, run "toxfr" on sat365.bsp. You can
find toxfr at:

ftp://naif.jpl.nasa.gov/pub/naif/toolkit/

You'll have to dig a bit to find your platform/language. I got mine at:

ftp://naif.jpl.nasa.gov/pub/naif/toolkit/C/PC_Linux_GCC_32bit/executables/

Note: Also download all other files in the toolkit, all are useful.

Step 2: "toxfrp sat365.bsp" yields "sat365.xsp". Looking in
sat365.xsp, we see quoted numbers like:

'-E6BEBE0789D848^-2'

These numbers are in IEEE-754 hex format and used by Fortran. In base
16, the number above is:

-0.E6BEBE0789D848*(10^-2)

where "10" means 16, since we're in base 16.

To convert do decimal, we first convert "E6BEBE0789D848" to decimal,
yielding 64948968022988872 [1].

"E6BEBE0789D848" is 14 characters long, so we divide by 16^14,
yielding (to 30 digits):

0.901347996559565989294071641780

"^-2" means we multiply by 16^-2, yielding (30 digits):

0.00352089061156080464567996735070

Of course, we could've combined the two previous steps and just done:

hex("E6BEBE0789D848")/16^16

to get the same thing. More efficient methods almost certainly exist.

bc-ieee754.pl in this directory
(https://github.com/barrycarter/bcapps/tree/master/ASTRO) will also do
the conversion.

Step 3: Looking at the last few lines of sat365.xsp, we see things like:

> Master Interval: 18.0000 Days

>   Name        Number            GM             NDIV   NDEG   Model
>   Mimas         601    2.503524000000000E+00     24     15   SATORBINT
>   Enceladus     602    7.211454165826105E+00     24     12   SATORBINT

Taking Enceladus as an example:

  * Since Enceladus is the 2nd satellite listed, it's data will follow
"BEGIN_ARRAY 2 7792004" in the xsp file (the 7792004 is the length of
the array, so the next 7792004 lines are elements of the array) [2]

  * NDIV=24 means each set of coefficients covers 18/24 days (18 =
master interval).

  * NDEG=12 means each coordinate is a 12th degree polynomial, so
there will be 13 (not 12) Chebyshev coefficients for each coordinate.

IMPORTANT: The NDEG convention used here is different from the
convention used in GROUP 1050 of header.430_572

Step 4: Looking at the first few lines after "BEGIN_ARRAY 2 7792004"
after decimal conversion ("sat365.xsp.dec" if you're using
bc-ieee754.pl), we see:

BEGIN_ARRAY 2 7792004
'SAT365                                  '
'-3155716758.81603'
'3155716867.18389'
'25A'
'6'
'1'
'3'
1024
'-3155727600'
'32400'
'31713.2412523424'

"-3155727600" is the number of seconds after the Julian day 2451545
(2000-01-01T12:00:00), the same as the "Equinox Reference Julian
Date".

IMPORTANT: Ignore the "File Epoch Julian Date": it is not useful to us

The 32400 means the first set of coefficients are good for -3155727600
seconds after the epoch (ie, 1899-12-31T21:00:00) plus or minus 32400
seconds.

TODO: Why isn't the epoch date more prominently mentioned?

The "31713.2412523424" above is the first Chebyshev coefficient itself.

Step 5: Since NDEG=12 for Enceladus, each coordinate has 13 (not 12)
Chebyshev coefficients. The coordinates are for X, Y, Z, VX, VY, and
VZ [3].

Thus, each set has 13 coefficients times 6 coordinates for a total of
78 lines. If we count "BEGIN_ARRAY 2 7792004" as line 1:

Lines 12-24 are Chebyshev coefficients for X
Lines 25-37 are Chebyshev coefficients for Y
Lines 38-50 are Chebyshev coefficients for Z
Lines 51-63 are Chebyshev coefficients for VX
Lines 64-76 are Chebyshev coefficients for VY
Lines 77-89 are Chebyshev coefficients for VZ

Note the 90th line after "BEGIN_ARRAY 2 7792004" is "-3155662800",
indicating the start of the next set of coefficients.

Important notes:

  * Ignore any unquoted numbers (most often "1024") in xsp files:
these are NOT array entries [4]

  * To see .bsp info without converting to .xsp, use "commnt -r sat365.bsp"
and "brief -c sat365.bsp"

  * Satellite positions are given relative to the *barycenter* of the
satellite's planetary system, which means:

    * Positions are NOT given relative to the solar system barycenter.

    * Positions are NOT given relative to the planet itself. The
planet's barycenter is the center of mass of the planet and its
satellites.

    * The position of the planet itself (relative to it's own
barycenter) is provided, in this case as the 13th array.

Spotchecking the answer:

  * To check via email, send the following email (for example) to
horizons@ssd.jpl.nasa.gov:

!$$SOF
COMMAND= '602'
CENTER= '500@6'
MAKE_EPHEM= 'YES'
TABLE_TYPE= 'VECTORS'
START_TIME= '2014-09-02'
STOP_TIME= '2014-09-12'
STEP_SIZE= '1 h'
OUT_UNITS= 'KM-S'
VECT_TABLE= '3'
REF_PLANE= 'FRAME'
REF_SYSTEM= 'J2000'
VECT_CORR= 'NONE'
VEC_LABELS= 'NO'
CSV_FORMAT= 'YES'
OBJ_DATA= 'YES'
!$$EOF

  * To check via the Horizons web interface, use these settings (for example):

Ephemeris Type [change] : VECTORS
Target Body [change] : Enceladus (SII) [602]
Coordinate Origin [change] : Saturn System Barycenter [500@6]
Time Span [change] : Start=2014-09-02, Stop=2014-09-12, Step=1 h
Table Settings [change] : output units=KM-S; reference plane=FRAME; CSV format=YES
Display/Output [change] : plain text

IMPORTANT NOTES (if using web interface):

    * The coordinate origin must be "Saturn System Barycenter
[500@6]", NOT Saturn itself.

    * Under Table Settings, the reference plane must be "FRAME".







********



TODO: spellcheck

TODO: note 1024 oddness, check via email and web (exact params)



Step 2: After running toxfr, you will have sat365.xsp. Looking at the
last few lines of this file (use "tail -n 75" for example), we see
(heavily elided and quoted to show just the relevant-to-us parts):

>    BEGIN_TIME      = CAL-ET 1900 JAN 01 00:00:41.183
>    END_TIME        = CAL-ET 2100 JAN 01 00:01:07.183

sat365.bsp (and thus sat365.xsp) contain positional data from the
start of year 1900 to the start of year 2100.

> Master Interval: 18.0000 Days

This tells us the master interval is 18 days; more about that below.

> Equinox Reference Julian Date: 2451545.00

The coordinates are for Julian day 2451545.00 aka 2000-01-01 12:00:00
UTC; in other words, J2000 coordinates.

> Planetary Ephemeris Number: DE-0430/LE-0430

These coordinates should be used with DE430.

> Bodies on the File:
>    Name        Number            GM             NDIV   NDEG   Model

A list of which bodies are described in this file.

Let's briefly look at Mimas, the first entry, even though we're going
to focus on Phoebe.

>   Mimas         601    2.503524000000000E+00     24     15   SATORBINT

The NDIV of 24 means each 18 day master interval is divided into 24
sub-intervals of 3/4 day each. In other words, each set of
coefficients for Mimas represents positions for 3/4th of a day.

NDEG=15 means the polynomials for Mimas are of degree 15. This means
there are 16 (not 15) coefficients for each component of Mimas'
position.





TODO: figure out what the GM heading means




   Enceladus     602    7.211454165826105E+00     24     12   SATORBINT
   Tethys        603    4.121107782641367E+01     12     14   SATORBINT
   Dione         604    7.311636648731589E+01     12     11   SATORBINT
   Rhea          605    1.539424643535228E+02      8     11   SATORBINT
   Titan         606    8.978138376543257E+03      6     12   SATORBINT
   Hyperion      607    3.718742808950764E-01      4     10   SATORBINT
   Iapetus       608    1.205120887032733E+02      2     10   SATORBINT
   Phoebe        609    5.528989950537777E-01      1      8   SATORBINT
   Helene        612    0.000000000000000E+00     12     11   SATORBINT
   Telesto       613    0.000000000000000E+00     12     15   SATORBINT
   Calypso       614    0.000000000000000E+00     12     15   SATORBINT
   Saturn        699    3.793120747607848E+07     12     12   SATORBINT



 (WHERE)


TODO: redundancy

[1] Some languages/operating systems may choke on this. My Perl
non-fatally warns "Integer overflow in hexadecimal number", but yields
"6.49489680229889e+16", an approximation to the actual value. You can
probably use clever bit-shifting to avoid this.

[2] This isn't strictly true, but I explain more later.

[3] The coefficients for VX, VY, VZ are redundant and can be obtained
by differentiating the polynomials for X, Y, and Z.

[4] These numbers probably had legacy use at some point, indicating,
for example, that the next 1024 lines were array entries (useful to
know when machines had less memory).

