# On 18 Sep 2021, rewriting for the following goals:
#
#   - avoid large pipes which reside in memory
#   - create list of excluded files
#   - separate out fgrep and egrep exclusions
#   - perhaps better commenting/formatting
#   - if sort creates large files maybe changed /tmp dir to be safe?...
#   - or use memory limited sort?
#
# Files that must exist: fgrep-commented.txt egrep-commented.txt

# Below, NUL means \0 the null character ASCII 0


# the final target

all: filelist.txt

# some variables in case we want to change things up

nice = nice -n 19
sortoptions = -S 8G

# the "commented" files may have comments or blank lines in them; this
# removes them and creates the "pure" versions

fgrep-pure.txt: Makefile fgrep-commented.txt
	egrep -v '^\#|^ *$$' fgrep-commented.txt | perl -nle 'print "\0$$_\0"' > fgrep-pure.txt

egrep-pure.txt: Makefile egrep-commented.txt
	egrep -v '^\#|^ *$$' egrep-commented.txt | perl -nle 'print "\0$$_\0"' > egrep-pure.txt

# find all the files I've previously backed up:
#
#  - the format of *.exclude is: filename NUL timestamp (thus -t '\0')
#
#  - Some files are backed up multiple times (if they change) and I
#  want to find the most recent backups first (thus -k2nr)
#
#  - This command doesn't delete duplicates but another one does
#
#  - don't use more than 8G of memory sort (-S 8G)
#
# 

previouslydone.txt: Makefile
	$(nice) sort $(sortoptions) -t '\0' -k2nr /root/massback-bulk/*.exclude > previouslydone.txt

# find the most recent backup for each file in previouslydone.txt
#
#  - I couldn't find options to uniq to make this work without having
#  to go through a second sort, so I do the below

previouslydone.txt.srt: previouslydone.txt
	$(nice) sort $(sortoptions) -t '\0' -k1,1 -u previouslydone.txt > previouslydone.txt.srt




# afad.txt is all files and directories (full path) with format:
#
# filename NUL mtime NUL canon-filename NUL size
#
# where "canon-filename" is the canonized filenames: if I backup a
# file/directory in one location and then move it, the program that
# creates afad.txt tells me where it was backed up originally

# On 8 May 2021, totally rewrote this to stop using pipes since that
# means CPU has to keep multiple large files open at once

# TODO: maybe use alternate temp directory for sort

# converted file lists on all drives I recognize

converted=$(shell egrep -v '^\#|^$$' /home/barrycarter/BCGIT/BRIGHTON/mounts.txt | perl -anle 'print "$$F[0]/$$F[1]-converted.txt"')

afad.txt: $(converted) Makefile
	$(nice) sort $(sortoptions) $(converted) > afad.txt

# all files through the egrep filter

afad-minus-egrep.txt: egrep-pure.txt afad.txt Makefile
	$(nice) egrep -avf egrep-pure.txt afad.txt > afad-minus-egrep.txt

# files excluded by egrep

excluded-by-egrep.txt: Makefile egrep-pure.txt afad.txt
	$(nice) egrep -af egrep-pure.txt afad.txt > excluded-by-egrep.txt

# and then by fgrep

afad-minus-egrep-fgrep.txt: Makefile fgrep-pure.txt afad-minus-egrep.txt
	$(nice) fgrep -avf fgrep-pure.txt afad-minus-egrep.txt > afad-minus-egrep-fgrep.txt

# files excluded by fgrep

excluded-by-fgrep.txt: Makefile fgrep-pure.txt afad-minus-egrep.txt
	fgrep -af fgrep-pure.txt afad-minus-egrep.txt > excluded-by-fgrep.txt

# and then exclude previously excluded files

afad-minus-egrep-fgrep-previous-backup.txt: Makefile afad-minus-egrep-fgrep.txt previouslydone.txt.srt
	$(nice) join --check-order -a 1 -t '\0' afad-minus-egrep-fgrep.txt previouslydone.txt.srt | perl -F'\0' -anle 'unless ($$F[1] eq $$F[4]) {print $$_}' > afad-minus-egrep-fgrep-previous-backup.txt

filelist.txt: afad-minus-egrep-fgrep-previous-backup.txt
	bc-chunk-backup3.pl --debug afad-minus-egrep-fgrep-previous-backup.txt
