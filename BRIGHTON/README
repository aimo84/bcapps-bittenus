%% TODO: find minimal configuration to bring up virtualbox (using a VM
to do this and then will mirror to live drive) and allowing me to VNC
into it [actually it needn't be minimal-- of course I could ssh tunnel
into VNC, ssh -X into machine, or even work on console directly, but I
prefer remote VNC]

: this step is optional -- it will create groups, but so will the next command
: if you dont run this one
yum -y grouplist

: install desktop
yum -y groupinstall "GNOME Desktop"

: get virtualbox repo
curl -o /etc/yum.repos.d/virtualbox.repo http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo

: and install virtualbox
: xterm needed for GNOME desktop, but not installed sigh
: vnc so I can access it remotely
yum -y install VirtualBox-5.1 xterm tigervnc-server

% tigervnc-server turns on the firewall, blocking incoming vnc; to fix:

systemctl disable firewalld

% and set a password so it comes up automatically at reboot
vncpasswd

% Due to a hideous oversight by CentOS, GNOME/gdm doesnt come up
automatically on reboot and "xinit" starts with on window manager. A
partial fix is to put this line in ~/.xinitrc (which is probably
empty, the first line is to start vnc):

vncserver &
exec gnome-shell

% reboot, login, and run "xinit &"

% you can now vnc into this machine and run virtualbox (note: if you
were using a VM to test how to get CentOS7 to run virtualbox, you
should follow the procedure above on the physical machine-- running
virtualbox inside a virtual machine is unwise [though apparently
possible])

%% TODO: maybe break above into a
"how-to-install-virtualbox-on-centos7.txt" but w/ a shorter title and
reference it here

%% TODO: note above is also off a minimal install

%% TODO: whine about default CentOS7 not enable network (+ not even
showing option until you choose partioning) -- maybe take screenshot

%% TODO: disclaim why I'm using VirtualBox over KVM (/dev/sdb only!)

%% TODO: merge CENTOS/FEDORA/BRIGHTON dirs into one semi-coherent mass

%% TODO: disclaim everything

This documents my attempt to setup "brighton", a new CentOS 7.2
machine, first as a VM, and later as a physical machine. My current
machine is running Fedora Core 11, and I will its existing files as a
"fallback" for certain things (eg, binaries and libraries absolutely
not available via CentOs 7.2 or that I am too lazy to install from
tertiary sources) [default install + CentOS 7 included/approved
repositories = primary source, unapproved repositories = secondary
source]

How to read this document:

  - A left flush "%% TODO:" indicates a step I need to do and that is
  not complete yet.

  - A left flush "% IMP:" indicates an important note about the steps
  that follow. You should not follow the steps that come afterwards
  unless you are sure you know what you're doing.

  - A left flush "% NOTE:" indicates a note that is optional reading
  and may explain why a certain step must be performed in a specific
  way and why other reasonable-seeming ways to perform that step may
  not be correct, or a comment on why this step is performed.

  - Any other left flush "% " indicates a step to follow.

% To get direct access from a virtual machine to a raw disk (/dev/sdb
in my case) on brighton (courtesy
https://www.howtoforge.com/using-raw-devices-in-virtualbox-vms), do
this on brighton:

: you could also have installed these earlier if desired
: note the last two below ARE different
yum -y install gcc kernel-devel kernel-devel-3.10.0-327.el7.x86_64
/sbin/vboxconfig
VBoxManage internalcommands createrawvmdk -filename sdb.vmdk -rawdisk /dev/sdb

% Use virtualbox to create a machine "babybrighton" (which will grow
up to be brighton, my new system -- ie, I will follow the same process
on my physical machine once I get it right on the VM) with the
following parameters:

  - Linux/Red Hat for the Type and Version (note that if you put
  "centos" anywhere in the name, virtualbox will fill these
  automatically)

  - Choose a VDI of at 48G as this will be a fairly large install.

  - Leave everything else as is, but then go to "Settings" and:

    - Under Network, choose "bridged", promiscuous mode to "Allow All"
    and the MAC address to "080000000000" or something else easily
    recognizable.

    - Under Storage:

      - add a vmdk to the SATA controller that is the "sdb.vmdk" you
      created above earlier

      - for the CD, choose CentOS-7-x86_64-Minimal-1511.iso as the
      image to install

  - You may wish to snapshot before installing CentOS 7 or at any
  "critical" point during this entire process.

% Install CentOS using the defaults, except as follows:

  - Partioning/installation destination: Since I'll be using /dev/sdb
  (on brighton) for most things, partition so that /home has 5 GiB and
  delete the swap partition entirely. Enable encryption, since I will
  be doing so in production.

  - Make sure to turn "Networking" on (this option only shows after
  you're done paritioning and isn't set by default, sadly)

  - Create root user with a password and "user" user as an
  administrative user w/o a password (we'll be assigning one below
  later).

  - Consider making a snapshot immediately after rebooting from
  install [and entering disk password] (VirtualBox allows snapshots of
  live machines-- HOWEVER, this snapshot will contain your disk
  password, so you may prefer to snapshot after "shutdown -h" instead)

% Reboot in detachable mode, enter disk password, kill X window (or
minimize if that doesn't work), and "ssh root@babybrighton" (or
however you're referencing it) from remote machine (dullon). Then:

% follow steps in move-root.txt if desired, shutdown machine, save
state, reboot to make sure /mnt/kemptown auto mounted, etc

%% TODO: explain dullon is current remote machine

% use large drive to cache across rebuilds if necessary

mv /var/cache/ /mnt/kemptown/var/
: if youve done this previously youll need to remove the pristine
: /var/cache on every new install
ln -s /mnt/kemptown/var/cache /var/

% rsync the latest BCGIT to babybrighton (dullon is 192.168.0.2)

yum -y install rsync
rsync -Pavz root@192.168.0.2:/home/barrycarter/BCGIT /home/user/



%% TODO: rename fc11root as such








%% TODO: consider making this entire document even more specific to me and avoid the "IF THEN" stuff

%% TODO: in primary README, give statement of purpose for this git repo

%% TODO: try to include reference URLs (using Firefox history if
needed) when doing something unusual or difficult

% When installing CentOS 7 on babybrighton:

  - Under "network", turn on Ethernet, name machine babybrighton

  - Under Configure/Ethernet, set MAC address to 08:00:00:00:00:00 or
  something else easy to recognize and configure your router/DHCP to
  give this a specific IP address and add that IP address to
  /etc/hosts for convenience. Example (to add to /etc/hosts):

192.168.0.100 babybrighton 

: reboot virutal machine and then below on brighton

: immediately after reboot, "shutdown -h" babybrighton and do this on brighton:

virsh snapshot-create-as babybrighton postinstall "Post installation"

: restart babybrighton



% After restarting babybrighton, do this on brighton so I can do all
the "cryptsetup" stuff on babybrighton, not on brighton itself (I want
to make babybrighton as close a match as possible, so have it do the
cryptsetup stuff is better than doing it in the host)

virsh attach-disk --persistent babybrighton /dev/sdb vdb

virsh attach-disk --persistent babybrighton /dev/sdb vdb --type disk

: opposite is "virsh detach-disk babybrighton vdb"

: "virsh domblklist babybrighton" lists disks

# snapshot-current snapshot-edit snapshot-info snapshot-list 


% Now, "ssh root@babybrighton" for the next steps

: this lets me use ../CENTOS/move-root.txt as it stands
ln -s /dev/vdb3 /dev/sdb3

: this is an ugly instance of having to install something early

yum -y install cryptsetup

% Follow ../CENTOS/move-root.txt if making alternate disk main disk;
if doing this, also make a snapshot (from brighton AFTER shutting down
babybrighton):

virsh snapshot-create-as babybrighton postdisk "post external disk"

: restart babybrighton

% NOTE: virsh snapshot-revert babybrighton postinstall






%% TODO: make sure no colon parens and explain why





% IMP: stop here, steps below are for older

% Use virtualbox's repo

curl -o /etc/yum.repos.d/virtualbox.repo http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo

% Install virtualbox, accepting GPG keys as necessary (can also use "-y"?)

yum -y install VirtualBox-5.1;: may need to verify some keys manually

% You CAN run VirtualBox from the command line, but it's sort of a
pain, so let's create a quick and easy X11 environment:

: GNOME the "yum groupinstall hidden" "X Window System" may work here too
yum -y groupinstall "KDE Plasma Workspaces";: this is overkill but it works



%% TODO: disclaim that CentOs7 actually has virtualization built in
(eg, "yum groupinstall 'Virtualization Host'"), but that we're using
virt as an intermediate step, so I am OK with "cheating"

: note "yum grouplist hidden" will show "X Window System" but wont w/o hidden

: note you probably could just install 


%% TODO: note use of ;: as comments

% IMP: this is incomplete

%% TODO: more
  

Steps start with left flush "%", but left flus"% NOTE:" indicates a note, not a step 

%% TODO: tell how I got to VirtualBox state

%% TODO: runme.sh for setup

%% TODO: Guest Box additions required to access main disk

%% TODO: can I encrypt /dev directly from vbox?

%% TODO: add repos

%% TODO: which programs can i NOT install from repos

%% TODO: hooking (linking) in old bin and lib and root from fc11root (and
.tcshrc files required) (PATH and LD_LIBRARY_PATH) but as last entries

%% TODO: fossies mention for source code where needed

%% TODO: use chkconfig/systemctl on guest to make sure what I want comes up (ps -auxwww or ps -ef to see whats actually running)

%% TODO: programs I want that dont appear to have packages:

celestia
dosemu (check: does dosbox include this implicitly?)
FBReader
gnumeric
maxima
ntop
openuniverse 

%% TODO: note that installing centos7 w/ all the repos/rpms I select
requires more than the default 8gb drive virtualbox gives (although
I'm now using KVM, but think it's default is too small too) --
recommend give as much space as possible, but maybe df -kh after full install

%% TODO: look at TODOs from FEDORA and CENTOS and VM

%% TODO: compare new bin dirs with old ones to see what is missing and will fallthru

% NOTE: info I may need to install guest additions:

: or equivalent in tcsh
export KERN_INCL=/usr/include
export KERN_DIR = /usr/src/kernels/3.10.0-327.36.3.el7.x86_64
