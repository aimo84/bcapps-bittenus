TODO: give remote machine a name like "dullon" or something so I don't
keep have to say "remote" and "brighton" (+ mention when complete)

TODO: add disclaimer re these are my experiences AND you should not
follow instructions blindly AND especially not run commands blindly
AND especially not as root. No intentional malicious code, but blindly
running stuff hurts you and other-- botnet

NOTE: any reference to "this directory" or "here" refers to
https://github.com/barrycarter/bcapps/blob/master/CENTOS/

NOTE: during graphical boot, hit ESC to see what system is actually doing

This document describes my attempt to setup a CentOS-7 system the way
I want it with minimal unnecessary daemons running.

I downloaded and installed
http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-Minimal-1511.iso
first

% On dullon (machine from which you are installing), add the machine's
IP address to /etc/hosts something like this:

192.168.0.3 brighton

This will let you refer to the machine as "brighton" instead of having
to type out the IP address each time. Of course, make sure you use the
machine's actual IP address, which probably won't be 192.168.0.3 in
your case.

% "ssh root@brighton" to login remotely as root

% OPTIONAL: If you have an encrypted non-boot drive (I'm naming mine
kemptown), do the following (note use your LVM's actual name below--
if you previously tried installing fedora this other drive, your LVMs
will have the same name, which you will have to fix-- see
"lvm-name-conflict.txt" in this directory):

: initially, there is no "/etc/cryptsetup" and "/etc/crypttab" reads:

: luks-id-of-root-partition UUID=id-of-root-partition none

cryptsetup open /dev/sdb3 kemptown
less /etc/cryptsetup
echo "luks /dev/sdb3 -" > /etc/cryptsetup
less /etc/crypttab
blkid | fgrep /dev/sdb3
: this must be an append, since main drive should appear there first
echo "luks UUID=the-uuid-given-by-blkid-for-dev-sdb3 none" >> /etc/crypttab
less /etc/fstab
echo "/dev/mapper/oldfedora-home /mnt/kemptown ext4 defaults,x-systemd.device-timeout=30 60 90" >> /etc/fstab
mkdir /mnt/kemptown
mount /mnt/kemptown

% If you installed Fedora on your large internal drive first and then
tried to move the installation to an SSD drive, the steps above may
not work properly: read lvm-name-conflict.txt in the ../FEDORA/
directory to continue

% create swapspace on /mnt/kemptown/swapspace (TODO: there may be
better ways of doing this but I'm wary of messing w/ my 8TB drive
since I've copied stuff over and made changes)

: only need to do two steps below once
dd if=/dev/zero of=/mnt/kemptown/swap bs=1000000000 count=128 status=progress&
mkswap /mnt/kemptown/swap
: below as recommended
chmod 0600 /mnt/kemptown/swap

less /etc/fstab
echo "/mnt/kemptown/swap swap swap defaults 0 0" >> /etc/fstab
swapon /mnt/kemptown/swap

% OPTIONAL: move user's home to /mnt/kemptown:

: if below reports "userdel: user user is currently used by process
: xxxx", kill process xxxx (potentially repeatedly) until the command
: succeeds

userdel user;
find /home/user -type f
: above should be tiny(ish)
rm -rf /home/user;
useradd -d /mnt/kemptown/user -g wheel -u 1000 user
passwd user
ln -s /mnt/kemptown/user /home
: move root over as well
mv /root /root.old
ln -s /mnt/kemptown/root /root

% rsync over BCGIT to brighton, since I will use symlinks to get
things in their proper place

: NOTE: in theory, could use scp which is installed by default, but
: too inefficient if /home/user/ already exists on a separate drive

: if this fails "sudo yum install rsync" on brighton and then try again

rsync -Pav user@192.168.0.2:/home/barrycarter/BCGIT /home/user/
: and rsync over my private crontab, one of the few files not in this directory
rsync -Pav user@192.168.0.2:/home/barrycarter/bc-private-crontab /home/user/

%% TODO: generalize above for private files in a dir perhaps?

% OPTIONAL: since I install multiple times, move /var/cache to main 8TB
drive that remains unchanged between reinstalls

: if youve done this once, no need to do it again
mkdir -p /mnt/kemptown/var/
sudo mv /var/cache/ /mnt/kemptown/var/

: if youve done this previously youll need to remove the pristine
: /var/cache on every new install
sudo ln -s /mnt/kemptown/var/cache /var/

%% run these community approved repo commands too:

: TODO: write script to check these and install only when needed
: this does NOT install anything
cd /root/build
: if /root/build is on separate drive only need to do these once
curl -LO https://centos7.iuscommunity.org/ius-release.rpm
curl -O http://mirror.symnds.com/distributions/gf/el/7/gf/x86_64/gf-release-7-10.gf.el7.noarch.rpm 
curl -O http://rpms.famillecollet.com/enterprise/remi-release-7.rpm

: runme.sh handles the rest

% Then run the commands in runme.sh

: below SHOULD do everything automatically, but MAY require user intervention

chmod +x /home/user/BCGIT/CENTOS/runme.sh
sudo sh -c '/home/user/BCGIT/CENTOS/runme.sh 1>/runme.out 2>/runme.err'&

%% TODO: attempted kill after boot:

: killing systemd-udevd and systemd-logind works but they come right back
: same with systemd-journald and "agetty"

: TODO: should be able to turn off anacron at a more fundamental level
sudo kill anacron
sudo pkill lvmetad
sudo pkill login
sudo pkill agetty
sudo pkill systemd-tty-ask-password-agent

%% TODO: setup xinetd properly

%% TODO: currently running "sudo dhclient -d" manually at each reboot, fix

% OPTIONAL: "shutdown -r now" to make sure everything comes up fine

% mass install (TODO: combine these later, and also "-y")

%% TODO: note that yum skips over uninstallable packages, but deal with those

%% TODO: copy notes from FEDORA/README as applicable
