See geonames.sql in this directory for correct creation method.

THE METHOD BELOW DOES NOT WORK, IGNORE IT!

time perl -F"\t" -anle 'print join("\t",@F[0,2,4..18])' allCountries.txt>ac2.txt

174.398u 4.503s 3:13.48 92.4%   0+0k 2057960+1535832io 0pf+0w

reducing number of fields (15..18 instead of 4..18):

147.600u 3.292s 2:40.05 94.2%   0+0k 954584+903608io 0pf+0w

in /dev/shm

165.491u 2.174s 2:48.21 99.6%   0+0k 0+0io 0pf+0w

add tabs as needed:

time perl -nle 'print tr/\t//' allCountries.txt > counts.txt&

17.585u 0.743s 0:19.46 94.1%    0+0k 824928+49960io 0pf+0w


Faster way to create geonames db:

in shell:

perl -nle '@f=split(/\t/);$f[0]=~s/\./\t/;print join("\t",@f[0,3])' admin1CodesASCII.txt > adm1.txt

perl -nle '@f=split(/\t/);$f[0]=~s/\./\t/g;print join("\t",@f[0,3])' admin2Codes.txt > adm2.txt

egrep -v '^#|^$' countryInfo.txt | perl -F"\t" -anle 'print "$F[0]\t$F[16]"' > cc.txt

unzip alternateNames.zip

zcat allCountries.zip | perl -nle 's/\"//isg;@f=split(/\t/);print join("\t",@f[0,2,4..18])' > ac2.txt &



in sqlite3 (geonamesthree.db for now):

-- tables below exist only temporarily to help geonames later

.separator "\t"
CREATE TABLE admin1codes (countrycode, admin1code, geonameid);
.import adm1.txt admin1codes

CREATE TABLE admin2codes (countrycode, admin1code, admin2code, geonameid);
.import adm2.txt admin2codes

CREATE TABLE countrycodes (countrycode, geonameid);
.import cc.txt countrycodes
CREATE INDEX i2 ON countrycodes(countrycode);

CREATE TABLE geonames (geonameid INT, asciiname, latitude DOUBLE,
 longitude DOUBLE, featureclass, featurecode, countrycode, cc2,
 admin1code, admin2code, admin3code, admin4code, population, elevation,
 dem, timezone, modification date);
.import ac2.txt geonames

CREATE TABLE altnames (alternateNameId, geonameid INT, isolanguage,
alternatename, isPreferredName, isShortName, isColloquial, isHistoric);
.import alternateNames.txt altnames

INSERT INTO altnames 
SELECT -1*geonameid, geonameid, 'orig', asciiname, 0, 0, 0, 0 FROM geonames;

CREATE INDEX i1 ON geonames(countrycode);

UPDATE geonames SET countrycode = (
 SELECT geonameid FROM countrycodes c WHERE c.countrycode = countrycode
);



