#!/usr/local/bin/bython -k

import sys
import os
import xarray
from bclib import *

# TODO: create a library (done) and canonize bclib(home) and stuff

fname = "/home/user/NOBACKUP/EARTHDATA/POPULATION/gpw_v4_population_count_rev11_2020_30_sec.tif"

# this is the tiny one for easy testing

# going thru smaller file below wo preloading:
# 49.101u 1.880s 0:49.61 102.7%   0+0k 0+8io 0pf+0w

# with preloading:
# 27.542u 1.883s 0:28.01 105.0%   0+0k 0+8io 0pf+0w

# so, yes, preloading is faster when memory permits

fname = "/home/user/NOBACKUP/EARTHDATA/POPULATION/gpw_v4_population_count_rev11_2020_1_deg.tif"

pt = xarray.open_rasterio(fname)

nodataval = pt.nodatavals[0];

# pt[0] = list(pt[0]);

for i in range(len(pt[0])) {
  for j in range(len(pt[0][i])) {
    print(i,j,float(pt[0][i][j]));
  }
}

die("TESTING");

# since our data is 43200x21600 we start with level 8 tiles -- this
# will be imperfect

x = list(pt.x)
y = list(pt.y)
vals = list(pt.values)

for i in range(len(x)) {
    print(i)
    for j in range(len(y)) {
        lat = float(y[j])
        lng = float(x[i])
        pop = float(vals[0][j][i])
    }
}







