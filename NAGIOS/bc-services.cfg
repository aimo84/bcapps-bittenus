# generic service from http://nagios.sourceforge.net/docs/3_0/objectdefinitions.html#service

define service {
 name generic-service
 active_checks_enabled 1
 passive_checks_enabled 1
 parallelize_check 1
 obsess_over_service 1
 check_freshness 0
 notifications_enabled 1
 event_handler_enabled 1
 event_handler bc
 flap_detection_enabled 1
 failure_prediction_enabled 1
 process_perf_data 1
 retain_status_information 1
 retain_nonstatus_information 1
 is_volatile 0
 check_period 24x7
 max_check_attempts 3
 normal_check_interval 10
 retry_check_interval 2
 contacts noone
 notification_options w,u,c,r
 notification_interval 60
 notification_period 24x7
 register 0
}

# TODO: not all my services need to be checked equally often; create
# explicit normal_check_interval for all services just to confirm I've
# actually looked at the interval

# this runs a bunch of external commands at once hourly (sort of a hack)

# actually every 20 minutes

define service {
 use generic-service
 host_name localhost
 normal_check_interval 20
 service_description extra
 check_command raw!"bc_extras ('/home/barrycarter/BCGIT/NAGIOS/extras.txt', '/home/barrycarter/extra-nagios-commands.txt')"
}

# this runs a bunch of external commands at once daily (copy of hack above)

# actually 3 times a day

define service {
 use generic-service
 host_name localhost
 normal_check_interval 480
 service_description dailyextra
 check_command raw!"bc_extras ('/home/barrycarter/BCPRIV/daily-tests.tcsh', '/home/barrycarter/BCGIT/NAGYERASS/bc-daily-tests-public.tcsh')"
}

# warn if I have unpushed git changes (this might be a bad idea)

define service {
 use generic-service
 host_name localhost
 normal_check_interval 60
 service_description git
 check_command raw!"bc_git ('/home/barrycarter/BCGIT')"
}

# check that all filespecs in recentfiles.txt are recent, replaces
# several other tests

define service {
 use generic-service
 host_name localhost
 normal_check_interval 10
 service_description recentfiles
 check_command raw!"bc_check_file_of_files_age ('/home/barrycarter/BCGIT/NAGIOS/recentfiles.txt /home/barrycarter/recentfiles.txt')"
}

# My "SCRATCH" file exists so I can X11 cut/paste (rxvt/xterm don't
# appear to always support that) and anything I put there should be
# transferred to another file, so a non-empty SCRATCH file is bad

define service {
 use generic-service
 host_name localhost
 normal_check_interval 1440
 service_description scratchfile
 check_command raw!"bc_nagios_file_size('/home/barrycarter/SCRATCH', 0)"
}

# I should not back up files in /tmp so /usr/local/etc/quikbak/tmp
# should never exist
define service {
 use generic-service
 ; once a day is more than enough
 normal_check_interval 1440
 notification_interval 1440
 host_name localhost
 service_description notmpbackup
 check_command raw!"bc_404 ('/usr/local/etc/quikbak/tmp')"
}

# in May 2017, I stopped using the category 'GAS' in my purchases db
# since it's ambiguous whether I mean vehicular fuel (which is now
# "CARGAS") or fuel for indoor appliances (which is now "NATURALGAS");
# these checks confirm I no longer use these categories (this
# explanation is completely useless since the views below were created
# outside GIT) [two tests, one for bankstatements, other for credit
# card statements]

define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description badgasbank
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badgasbank' -d test -v -w 0 -c 0"
}

define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description badgascredit
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badgascredit' -d test -v -w 0 -c 0"
}

# dailyish, check if my domains are about to expire
define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description domainexp
 check_command raw!"bc_check_domain_exp ()"
}

# entries in credcardstatements2 with no card number
define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description credcardcat
 ; amount<0 means I paid out, didnt categorize pre-date below
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badcard' -d test -v -w 0 -c 0"
}

# plivo is currently hosting some of my sound files but may stop doing
# so; this semi-efficiently checks that one of the files is there
# (presumably, if one is there, they are all there)

define service {
 use generic-service
 host_name localhost
 normal_check_interval 1440
 service_description plivosound
 check_command raw!"bc_head_size ('http://s3.amazonaws.com/plivocloud/4c743546-7e1b-11e2-9060-002590662312.mp3', 1962720)"
}

# confirm hardware clock is close to computer clock
define service {
 use generic-service
 host_name localhost
 normal_check_interval 360
 service_description hwclock
 check_command raw!"bc_hwclock_test ()"
}


# my "diary" files should never contain "notemark" (I use that phrase
# to indicate something Im putting in a diary file temporarily, but
# that needs to be moved somewhere else)
define service {
 use generic-service
 host_name localhost
 service_description notemark
 normal_check_interval 1440
 ; single quote tilde to avoid shell expansion to /home/barrycarter
 check_command raw!"fgrep -i notemark `find /home/barrycarter/TODAY -mtime -30 -type f | fgrep -v '~'`"!--func=1is0
}

# make sure my hostname is correct (dhclient sometimes resets it?)
define service {
 use generic-service
 host_name localhost
 normal_check_interval 720
 service_description hostname
 check_command raw!"bc_hostname_test ()"
}

# check mount points are up and running
define service {
 use generic-service
 normal_check_interval 30
 host_name localhost
 service_description check_mounts
 check_command raw!"bc_check_mounts2 ('/home/barrycarter/BCGIT/BRIGHTON/mounts.txt')"
}

# and the MX records
# changed sort order since I now use LC_ALL=C

# TODO: move to bc-daily-tests.tcsh at some point

# changed 13 Feb 2022 as I move barrycarter.info to google domains for email

define service {
 use generic-service
 host_name localhost
 normal_check_interval 60
 service_description dns_mx
 check_command raw!"dig -t mx +trace barrycarter.info | egrep 'IN[[:space:]]MX' | cut -f 5 | sort | paste -s -d, | fgrep -ix '10 alt1.gmr-smtp-in.l.google.com.,20 alt2.gmr-smtp-in.l.google.com.,30 alt3.gmr-smtp-in.l.google.com.,40 alt4.gmr-smtp-in.l.google.com.,5 gmr-smtp-in.l.google.com.'!--func=1is2
}

# make sure maillog shows no unsent messages (except to crontab)
# 31 May 2013: adding exception for autoemails from tweety@barrycarter.info

# 19 Jun 2022: added exception for root to root emails, removed no
# longer used tweety@barrycarter.info exception

# TODO: can I use grep -q here; using wc is kludgey

define service {
 use generic-service
 host_name localhost
 normal_check_interval 60
 service_description maillog
 check_command raw!"sudo fgrep 'stat=' /var/log/maillog | fgrep -iv 'stat=sent' | fgrep -iv 'to=crontab@' | fgrep -iv 'to=root, ctladdr=root'"!--func=1is0
}

# my /tmp directory sometimes gets really big
# <h>and if you've seen my coding style, you know why!</h>
# As a side note, this "fixes" the problem (caution!)
# mkdir /tmp.new; chmod 1777 /tmp.new; mv /tmp /tmp.old; mv /tmp.new /tmp
# (and delete /tmp.old when ready; this should preserve "open filehandles")

# bumped to 10M for saopaulo

define service {
 use generic-service
 host_name localhost
 normal_check_interval 60
 service_description tmpsize
 check_command raw!"bc_nagios_file_size('/tmp', 10000000)"
}

# bc-stream-twitter
define service {
 use generic-service
 host_name localhost
 service_description streamtwit
 ; use of space below is kludge
 ; TODO: fix!
 check_command raw!"bc_stream_twitter_test( )"
}

# confirm files bc-rev-search.pl uses are all sorted properly with
# respect to bcunix (not with respect to their own machines (once a
# day)

# TODO: some of these are named .txt others are named .txt.srt, I
# should really fix this (in the programs that create them) at some
# point

define service {
 use generic-service
 normal_check_interval 1440
 notification_interval 1440
 host_name localhost
 service_description bcunixrevsorted
 check_command raw!"sort -c /bcunix-files-rev.txt"
}
