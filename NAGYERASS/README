This is "nagyerass take two", a replacement for nagios, after I've
used nagios for a while and understand what I dislike about it.

bc-run-nya-test.pl: This program will do the following:

  - log that a test is about to be run

  - run a test that is either a raw Unix command (including possibly a
  test that's part of the nagios suite) or a subroutine found in
  bc-run-nya-test.pl itself

  - a test may contain subtests, which will be run as separate forked processes

  - log the results of the test

  - print to ~/ERR the results of the test

TODO: make it an error for test results to be too old

TODO: maybe create second file from metafile (in private location) to
handle $$ cleanly

TODO: test may contain subtests

TODO: include private tests

TODO: import existing nagios tests

TODO: add ping tests since I don't have the concept of hosts vs services

TODO: allow suppress.txt to suppress running tests, not just printing results

TODO: consider moving inventory checks here?

TODO: test that weather data is fairly recent

DONE: test that drives are mounted correctly: ie, /mnt/villa and
/mnt/lobos are mounting the correct drives-- do NOT use
/mnt/villa/villa-files.txt as a test since I long term plan to copy
file lists to multiple drives (maybe use blkid and program I wrote?) [created IDENTITY.name files on each drive in mounts.txt]

TODO: if qbittorrent is running there should be a process waiting for
it to "end" since I need to know if it crashes (I CAN update saopaulo-procs.txt to make sure it's running, not sure that's a good idea)

TODO: check recent changes to calendar.txt to see if I mention 2018 or
otherwise add a date that seems unreasonable

TODO: confirm all doordash receipts have a link to the receipt (ie, a
receipt number) and there are no duplicate receipt numbers (and maybe
that receipt numbers are in numerical order by date)

TODO: make sure claim numbers in medical database are unique (and in
order of date?)

DONE: alert if my Ally bank balance falls below $15K, where Ally gives
me a much lower interest rate

TODO: don't run tests if CPU it too high

TODO: getmail log recency (existing perl script)

TODO: fix-it scripts when something goes wrong

TODO: REMINDER: can write tests even before nagyerass goes into production

DONE: installed cron file should never be empty (+ should be certain
min size?)

TODO: see also ../NAGIOS/TODO and perhaps merge here

DONE: categories in bankstatements, cashstatements,
credcardstatements2 should be from a fixed list, and some should not
be used after a given date; there should also be no or few categories that only have a small number of entries

DONE: any entries that have order number (such as shipt purchases)
should have unique ones

TODO: saved-messages should never contain certain types of messages,
such as uptimerobot notifications

TODO: confirm that fixed monthly payments are actually constant and
occur only once a month (including rent/mortgage/etc)

TODO: all refnum for instacard should be exactly five letters long in db

TODO: git status (for multiple gits)

TODO: twitch streams in email, on youtube and downloaded should
roughly match in terms of time, number, length, etc

TODO: i should have PDF version of all doordash receipts [doordash receipt files names do not match refnums, wow!]

TODO: /usr/local/etc/tasks/ and subdirs should have no .new files

TODO: in the ~/TODAY directory, there should be no files from the future (or older than 19-whatever)

TODO: all doordash/postmates/etc orders should have refnum field nonempty

TODO: doordash order numbers (and others?) should be in numerical
order by date (if not, I've probably confused two otherwise identical
orders), should also be unique

TODO: all emails in BC-WP-.... should follow pattern

TODO: for ebay purchases, refnum should be item number, item number
must appear in comments, comments must contain phrase "this charge
will appear on your credit card as [x]", and the merchant must match x

TODO: in my EDABIT and SKYFIELD folders, there should be no 'new' messages

TODO: refnums in the db should not have newlines

DONE: all items in db marked "recognized" should also have a non empty
"category" field

TODO: make sure price I pay "per pill" for medical items is consistent-- in other words, fewer pills = lower price

TODO: there should be no late fees on any of my statements

TODO: consistent naming of files, both in terms of biller name and in
terms of date (use closing date consistently when available, not "bill
due on" date)

TODO: all postmates orders should have delivery time as well

TODO: for all tests, attempt auto-recovery where possible

TODO: web log files that aren't rotated should start on a consistent date

TODO: for a given merchant, order numbers, transaction ids (aka FIT
ids), and dates should all increase in same way

TODO: for recoll indexing, make sure recent documents have been indexed

TODO: NS tests for all domains (both that IP is resolving correctly
and name server itself is set properly)

TODO: for tables where i have a non null balance column, the
calculated balance should equal the actual balance

TODO: confirm /mnt/drive/drive-files.txt are fairly recent and large enough, should be created daily

TODO: confirm mounts.txt (or equivalent) is accurate representation of
drives that are actually mounted in both directions (ie, there
shouldn't be drives mounted that aren't in mounts.txt except for
special cases)

TODO: for amazon gift card total in db, running total should never be
negative since I can't use gift money I don't have (similar for any
other place that does "gift card balance" as opposed to generic gift
cards)

TODO: refnums should rarely be duplicated (excluding NULLs) (mostly done)

TODO: refnums should appear in comments field of entry (mostly done)

TODO: zip files in GOOGLE takeout should be recentish (no more than 2 months per account)

TODO: make sure per-minute XWD files are fairly recent (ie, there should be ~1440 for the previous day)

DONE: warn myself when credit card is about to expire

TODO: in Firefox, bookmarks with specific tags should also have other
tags that are synonyms (for example)

TODO: sort -nc on some files including "DOING" should work

TODO: consider adding mrtg or similar logging in addition to just tests

TODO: test to see if new transactions with older dates show up... those are ones I could miss

TODO: ensure /var/spool/incron/user is more recent than ~/BCGIT/BRIGHTON/bc-public-incrontab-saopaulo and private version of that file if I ever create one

TODO: consider date-vs-oid check for transactions in various tables--
this won't be 100% (transactions aren't added in exact date order) but
serious outliers could indicate I entered a bad date

TODO: all amazon invoices should be downloaded (doneish)

TODO: all amazon invoices in HTML should also be in db

TODO: html receipts should contain order number matching filename

TODO: some directories should only have files matching a certain
pattern (eg, the directory I use to store voicemails)-- check that
this is actually true. Examples:

  - directory of Twitch profiles: all files end in Twitch.html or Twitch_files

  - directory of recorded calls/faxes: files should end in .amr, .gsm, etc

  - directory of Medical records: files should match names of medical
  providers or special cases

  - directory of SCANS: no medical record scans, since these would belong in MEdical records (this is a higher level of pattern matching where a given pattern could theoretically be in two directories, but I have canonically decided it must be in one not the other)

TODO: for sites where data is updated, there should be some test that confirms data is recent, not just that page exists

TODO: if a video directory has .srt, .vtt, .json, .info, .description
or similar files, confirm there is a video file (eg, .mp4) associated
with them (see ~/MP4/MUSIC/runme.tcsh for an example)

TODO: getmail should run as user not root-- generically, bc-daemon-checker.pl can check processes are running as who they should run as?

DONE: in ~/annoytab.d/*.txt there should be no dupe lines except the empty line and maybe commented lines

DONE: in ~/annoytab.d/*.txt none of the files should be empty and there should be at least one future event (otherwise .txt file is obsolete)

TODO: in ~/annoytab.d/*.txt check that I haven't accidentally typed 2020 when I meant to type 2021 (number of items over a year old should be limited)

TODO: for amazon invoices, the card mentioned in the invoice should match the card mentioned in the database/table (nontrivial)

TODO: for tables that contain monetary amounts (but are not part of
bc_budget_view, such as my medical purchases table) make sure the
monetary events match bc_budget_view so that all payments are
reflected

TODO: for tables that should be updated frequently, confirm at least n rows have a time stamp less than m days old

TODO: current web log files should have fairly recent accesses

TODO: all ATM withdrawals should show up as positive amounts in cashstatements (in general, any TRANSFER category transactions should have a counterbalancing TRANSFER transaction)

TODO: all transactions in cash/bank/creditcard statements should be marked RECOGNIZED except for noted exceptions

TODO: rewrite bc_nagios_file_size to use greater than less than and equal to AND to read from list of files, not hardcoded files in bc-services.cfg

TODO: any local URL tests should also have free external monitoring (eg, montastic) tests as well

TODO: all Amazon order descriptions should have "shipping speed" and "condition" and "sold by" with some exceptions based on date and other factors

TODO: confirm mail folders I'm not using are empty (which doesn't necessarily mean 0 size because of the weird "DON'T DELETE THIS MESSAGE -- FOLDER INTERNAL DATA" message, INCLUDING "temporary" folders I used to make saving messages faster (the "merge me" folders)

TODO: some merchants should have consistent categories (eg, SHIPT =
grocery, DOORDASH = restaurant, and so on)

TODO: check for common mispellings in files I use most often (eg, differnet for different)

TODO: some mail folders should never have emails from certain senders or to certain receipients

TODO: directories that I no longer use should not have any recent files (which would indicate I accidentally used an obsolete program) (eg, mail annotation directories)

TODO: make sure I have contiguous bank and creditcard statements and
that they are name consistently (some anamolies do exist and must be
fixed) (eg, wells-fargo-bank-2021-05-18.pdf should be wells-fargo-bank-20210518.pdf)

TODO: credcardstatements and credcardstatements2 should be distinct since i union them for bc_budget_view (this can also be handled by prohibiting two transactions to have the same date, amount, and card except where allowed)

TODO: alert if nearing credit card limit on any card (banks alert me
too, but this can be a doublecheck/earlier warning/etc)

TODO: most transactions should have comments, recurring transactions exempted

TODO: some fields in some tables in some dbs should be from a set of
limited values (different values -> typo or something)

TODO: in some cases, creating half-ass/incomplete solutions so should
review 'done' items to make sure they are really done

TODO: make sure files download completely by looking for </html> tag (for HTML files for example), "grep -L" may help

TODO: if I have meta pages of receipts or orders, make sure every order/receipt mentioned in the meta page also exists as a separate file

TODO: when I mark an item as 'recognized', I normally include a confirmation that the total of items i listed is correct-- perhaps make this a check

TODO: if amount colon value appears in comments field should match amount (eg, Amount: $123.45 means amount of transaction should be 123.45 as well)

TODO: all amounts in bc_budget_view should be equivalent to their value rounded to two places (no fractional pennies)

TODO: if category is REFUND or REFUNDED, the sign (plus/minus) should
match, but this is still tricky because a refund from a credit card
overage means they charge me the amount they're sending me

TODO: the amounts of REFUND and REFUNDED *should* be equal but with exceptions

TODO: all transactions should have categories (this is also an issue for my budgeting program)


