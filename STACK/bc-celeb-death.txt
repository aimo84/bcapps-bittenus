**DISCLAIMER: This answer is wrong. But it has graphs and stuff**

According to wikidata, 2016 wasn't a particularly deadly year for musicians:



wikidata info boxes 

CANON:

: it all starts w this query

SELECT ?item ?birth ?death 
  (GROUP_CONCAT(DISTINCT ?prof; SEPARATOR=",") AS ?profs)
WHERE {
  ?item wdt:P106 ?prof.
  ?prof wdt:P279* wd:Q639669.
  OPTIONAL {?item wdt:P569 ?birth}.
  OPTIONAL {?item wdt:P570 ?death}.
}
GROUP BY ?item ?birth ?death

http://tinyurl.com/yd7zrxlp

musicians-info.tsv Oct  3 12:52 is canon

perl -F"\t" -anle '$F[2]=~s/\-.*//; print $F[2]' musicians-info.tsv |
 sort | uniq -c | sort -k2nr > musician-deaths-by-year.txt

cp musician-deaths-by-year.txt math1.m

: in mathematica




note 't' years and unreadability


: dl results as TSV to file1.tsv

: remove unncessary entity info and profs (latter for now)
: and sort for ultimate join
: NULL so join doesnt get confused by string of spaces
: this also kills off things like t591684991 wikidata placeholders
: reverse death and birth since death = focus
: TODO: explain this better

perl -F"\t" -anle '$F[0]=~s/^.*Q/Q/; for $i (@F[1..2]) {unless ($i=~/^[0-9]/) {$i="NULL";}} print "$F[0] $F[2] $F[1]"' file1.tsv | sort -u -k1,1 >! file2.tsv

# $F[1]=~s/^([^0-9]|.*$/NULL/; $F[2]=~s/^[^0-9|$].*$/NULL/; print "$F[0] $F[1] $F[2]"' file1.tsv | sort -u -k1,1 >! file2.tsv

Q446955 is most extreme case 16 total

: todo: explain how I got labels.txt

: with names, sorted by death date reverse
: inserting manual tab below with ctrl-v TAB (ugly)
join -a 1 -j 1 file2.tsv labels.txt.srt | sort -k2r >! file3.tsv

perl -anle '$F[1]=~s/\-.*$//; print $F[1]' file3.tsv | sort | uniq -c | sort -k2nr > file4.tsv


Q41091734 Q41325176 are examples that can't be joined


Q7843730 is youngest

only in 1 nonenglish language (eg)

Debbie Reynolds, Carrie Fisher both qualify [latter as voice actor in Persian Wikipedia]



(most likely added after JSON dump date?)

TODO: don't forgot BCE dates

https://www.wikidata.org/wiki/Q11266851 is one strange case

artist (Q483501) is a double containing field

TODO: elvis lives joke

TODO: spreadsheet

Q1001122  Buddy Boy Hawkins (no birth/death, useful special case)

278291 musicians total


60017 musician deaths

644 died twice or more

Q446955 died four times (known issue)

59361

59578?

http://musicfans.stackexchange.com/questions/4561/was-2016-really-a-partcularly-deadly-year-for-artists
but also general question of whether 2016 was "year of death" or even
"year of death for related famous people"

this is all subclasses of musician

SELECT ?item ?itemLabel ?prof ?profLabel ?death ?deathLabel WHERE 
{
 ?item wdt:P106 ?prof.
 ?prof wdt:P279* wd:Q639669.
 ?item wdt:P570 ?death
SERVICE wikibase:label{bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}


SELECT ?x WHERE {
 ?x wdt:P106 Q639669
LIMIT 20
}

Q639669 = musician

P106 = occupation

P570 = date of death

SELECT ?x ?z WHERE {
?x wdt:P106 Q639669 .
?x wdt:P570 ?z
LIMIT 20
}

*)


SELECT ?item ?prof ?death  WHERE 
{
 ?item wdt:P106 ?prof.
 ?prof wdt:P279* wd:Q639669.
 ?item wdt:P570 ?death
}
LIMIT 20

SELECT ?item ?itemLabel ?prof ?profLabel ?death  WHERE 
{
 ?item wdt:P106 ?prof.
 ?prof wdt:P279* wd:Q639669.
 ?item wdt:P570 ?death
SERVICE wikibase:label{bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }

}
ORDER BY DESC(?death)
LIMIT 100

# ran this query and stored output

SELECT ?item ?itemLabel ?prof ?profLabel ?death  WHERE 
{
 ?item wdt:P106 ?prof.
 ?prof wdt:P279* wd:Q639669.
 ?item wdt:P570 ?death
SERVICE wikibase:label{bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
FILTER (?death > '2000-01-01'^^xsd:dateTime)
}

# then ran same query with <= and stored results

# list of "musician subprofessions"

perl -F'\t' -anle 'print $F[3]' deaths-* | sort -u | tee professions.txt

# queries like below to find multi-levels
SELECT ?prof ?profLabel ?subprof ?subprofLabel ?subsubprof ?subsubprofLabel ?subsubsubprof ?subsubsubprofLabel 
WHERE 
{
 ?subsubsubprof wdt:P279 ?subsubprof.
 ?subsubprof wdt:P279 ?subprof.
 ?subprof wdt:P279 ?prof.
 ?prof wdt:P279 wd:Q639669.
SERVICE wikibase:label{bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}

# this has no results

SELECT ?prof ?profLabel ?sub1prof ?sub1profLabel ?sub2prof ?sub2profLabel ?sub3prof ?sub3profLabel
 ?sub4prof ?sub4profLabel ?sub5prof ?sub5profLabel ?sub6prof ?sub6profLabel
WHERE 
{
 ?sub6prof wdt:P279 ?sub5prof.
 ?sub5prof wdt:P279 ?sub4prof.
 ?sub4prof wdt:P279 ?sub3prof.
 ?sub3prof wdt:P279 ?sub2prof.
 ?sub2prof wdt:P279 ?sub1prof.
 ?sub1prof wdt:P279 ?prof.
 ?prof wdt:P279 wd:Q639669.
SERVICE wikibase:label{bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}

TODO: explain the unnamed Q entities

TODO: dying twice

TODO: put in SQL db and check sanity before counting

TODO: you must be a mathemtiaitan joke

EDIT: "That must have been a mathematician." Puzzled, one of the other men asks, "Why do you say that?" The reply: "For three reasons. (1) he took a long time to answer, (2) he was absolutely correct, and (3) his answer was absolutely useless."

host of caveats: notability guidelnes, proximity vs notability, wp own notability

TODO: explain pure Q numbers

# sccripts to confirm no multiple deaths (multiple rows allowed
# because of multiple profressions)

perl -F'\t' -anle 'print "$F[0] $F[-1]"' deaths-* | sort -u > ! outfile1.txt

perl -anle 'print $F[0]' outfile1.txt | sort | uniq -dc > outfile2.txt

perl -anle 'print $F[1]' outfile2.txt | tee double-death-entities.txt

fgrep -f double-death-entities.txt outfile1.txt | tee double-deaths.txt

known bad case: Werner Wolf Glaser Q68216

(known issue)

https://www.wikidata.org/wiki/Wikidata:Database_reports/Constraint_violations/P570#single_value

sort -k1,1 -u outfile1.txt > outfile3.txt

    697 2017
   1112 2016
   1109 2015
   1086 2014
   1175 2013
   1057 2012
   1124 2011
   1070 2010
   1010 2009
    976 2008
   1004 2007
    994 2006
    877 2005
    860 2004
    798 2003
    759 2002
    736 2001
    833 2000
    730 1999
    685 1998
    665 1997
    663 1996
    695 1995
    636 1994
    633 1993
    642 1992
    635 1991
    543 1990
    551 1989
    572 1988
    577 1987
    527 1986
    523 1985
    542 1984
    504 1983
    489 1982
    510 1981
    484 1980
    458 1979
    468 1978
    439 1977
    433 1976
    417 1975
    461 1974
    455 1973
    414 1972
    417 1971
    390 1970
    436 1969
    367 1968
    373 1967

SELECT ?item ?itemLabel ?prof ?profLabel WHERE 
{
 ?item wdt:P106 ?prof.
 ?prof wdt:P279* wd:Q639669.
SERVICE wikibase:label{bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}

DISCLAIM: queries different days, offset -> maybe miss some if added

NOTE: LIMIT 10000 works, as does LIMIT 25000 (sometimes), 20K times out sometimes too

http://tinyurl.com/y9cjqtyf
http://tinyurl.com/y8x8pdj6

profession graph:

WRONG: perl -anle 'print "\"musician\" -> \"$F[1]\""' direct-sub-musicians.txt | tee graph1.txt

# my numbering scheme gets wonky here, but the connections should be ok

perl -F'\t' -anle 'print "\"musician\" -> \"$F[1]\""' direct-sub-musicians.txt | tee graph1.txt

perl -F'\t' -anle 'print "\"$F[1]\" -> \"$F[3]\""' third-level-sub-musicians.txt | tee graph2.txt

perl -F'\t' -anle 'print "\"$F[3]\" -> \"$F[5]\""' fourth-or-something-level-sub-musicians.txt | tee graph3.txt

perl -F'\t' -anle 'print "\"$F[5]\" -> \"$F[7]\""' fifth-or-something-level-sub-musicians.txt | tee graph4.txt

perl -F'\t' -anle 'print "\"$F[7]\" -> \"$F[9]\""' 6th-or-something-level-sub-musicians.txt | tee graph5.txt

perl -F'\t' -anle 'print "\"$F[9]\" -> \"$F[11]\""' really-high-level-sub-music.txt | tee graph6.txt

virtuoso is sub for 2 profs, instrumentalist and music interpreter

# this lists all Q with english labels (if existing)
bzcat wikidata-20161226-all.json.bz2 | perl -nle 's/"id":"(.*?)"//; $x=$1; s/"language":"en","value":"(.*?)"//; $y=$1; print "$x $y"'

: create a sorted listed of labels for the join command

bzcat latest-all.json.bz2 | perl -nle 's/"id":"(.*?)"//; $x=$1; s/"language":"en","value":"(.*?)"//; $y=$1; print "$x $y"' > labels.txt &

sort labels.txt > labels.txt.srt







http://tinyurl.com/y7ucgf9m = first level

(72 at first level)

no that wrong

http://tinyurl.com/yayl97al = 39 at first level

note: add "digraph x {" at top and "}" at bottom

%% dbpedia and freebase?

(freebase is gone)

bzcat wikidata-20161226-all.json.bz2 | perl -nle 's/"id":"(.*?)"//; print $1' | less
