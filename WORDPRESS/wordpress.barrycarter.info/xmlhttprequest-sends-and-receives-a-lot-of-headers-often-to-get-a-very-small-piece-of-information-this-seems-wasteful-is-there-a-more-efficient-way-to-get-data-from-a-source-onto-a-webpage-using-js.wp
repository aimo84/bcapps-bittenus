
ID: 22800
post_name: xmlhttprequest-sends-and-receives-a-lot-of-headers-often-to-get-a-very-small-piece-of-information-this-seems-wasteful-is-there-a-more-efficient-way-to-get-data-from-a-source-onto-a-webpage-using-js
post_category: vark2
post_author: barrycarter
post_date_gmt: Fri, 03 Jun 2011 03:36:15 +0000
post_type: post 
post_status: publish
post_title: XMLHTTPRequest sends and receives a lot of headers, often to get a very small piece of information. This seems wasteful. Is there a more efficient way to get data from a source onto a webpage using JS?

======================================================

(You): XMLHTTPRequest sends and receives a lot of headers, often to get a very small piece of information. This seems wasteful. Is there a more efficient way to get data from a source onto a webpage using JS?

(Crash): Look up websockets.  It's new and a pain in the ass to get going but if you're adventurous it might be viable for your project.  Otherwise you're looking at high-latency calls (forgot the textbook name), where you your AJAX queries the server, but the server doesn't bother responding until it has new information to give.

(You): thanks! Does the client have to be websocket compatible too? Or is it just a persistent keep-alive to port 80, do you know?

(Crash): for websockets you do need a modern browser with modern JS as it's part of Web Applications 1 spec. (colloquially HTML5).  The other method has pretty much been the standard for years.

----------------------

(Jader): You can do it with Comet as described in http://en.wikipedia.org/wiki/Comet_%28programming%29

(You): wow, thanks! That's the sort of thing I was looking for.

----------------------

(Alexander): xhr is bound to the limitations of http, the headers include cookies, user

agent etc. that are in every request (and may be necessary for

authentication) and the reply headers are generated by the server and cannot

be modified by the server program. The server may be modified to include

less headers (e.g. nginx) but other components may add headers as well

(company proxy etc).

In addition if you use a xml request/response, the overhead of xml adds to

that, even with json you get a bit of overhead.



You can collect different requests into one xhr request, if all data is

returned immediately, this way you get the overhead for only one request

(e.g. check the login credentials and return the user data that is needed on

a page or collect all state data into an array and return that in one json

object, this doesn't make sense when the requests are processed individually

(e.g. search queries) or the data is returned at different times, e.g. for a

chat service or new mail notification)



If you want to avoid the overhead of http and xhr, there is a protocol

called WebSockets that supports keeping a direct connection open and using

it for bi-directional communication without the overhead of http, but this

is limited to clients (Firefox & Co) and servers that support that and has

some difficulties with proxies, since they are limited to http protocol.

Also, there may be security issues with this and you have to write your own

server implementation in a way since you cannot use regular servlets or php

scripts which only support http type requests (haven't tried that myself, so

I'm not sure what you acutally need to implement a server)



[Vark assigned category: <b>web programming</b>, <a target='_blank' href='http://wordpress.barrycarter.org/index.php/more-details-about-barry-after-vark/'>more details</a>]

